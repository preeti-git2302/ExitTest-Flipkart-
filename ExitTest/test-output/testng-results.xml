<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="21" total="41" passed="18" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-07-14T23:07:24 IST" name="Suite" finished-at="2022-07-14T23:10:50 IST" duration-ms="205752">
    <groups>
    </groups>
    <test started-at="2022-07-14T23:07:24 IST" name="Test" finished-at="2022-07-14T23:10:50 IST" duration-ms="205752">
      <class name="com.ExitTest.Tests.SearchTest">
        <test-method is-config="true" signature="intializerDriver(java.lang.String)[pri:0, instance:com.ExitTest.Tests.SearchTest@57b9e423]" started-at="2022-07-14T23:10:14 IST" name="intializerDriver" finished-at="2022-07-14T23:10:15 IST" duration-ms="1006" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializerDriver -->
        <test-method is-config="true" signature="openUrl()[pri:0, instance:com.ExitTest.Tests.SearchTest@57b9e423]" started-at="2022-07-14T23:10:15 IST" name="openUrl" finished-at="2022-07-14T23:10:19 IST" duration-ms="3611" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openUrl -->
        <test-method is-config="true" signature="windowMaximize()[pri:0, instance:com.ExitTest.Tests.SearchTest@57b9e423]" started-at="2022-07-14T23:10:19 IST" name="windowMaximize" finished-at="2022-07-14T23:10:19 IST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- windowMaximize -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.ExitTest.Tests.SearchTest@57b9e423]" started-at="2022-07-14T23:10:19 IST" name="startTest" finished-at="2022-07-14T23:10:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ExitTest.Tests.SearchTest.search()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="search()[pri:1, instance:com.ExitTest.Tests.SearchTest@57b9e423]" started-at="2022-07-14T23:10:19 IST" name="search" finished-at="2022-07-14T23:10:23 IST" duration-ms="3889" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [Iphone12- Buy Products Online at Best Price in India - All Categories | Flipkart.com] but found [Yes- Buy Products Online at Best Price in India - All Categories | Flipkart.com]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [Iphone12- Buy Products Online at Best Price in India - All Categories | Flipkart.com] but found [Yes- Buy Products Online at Best Price in India - All Categories | Flipkart.com]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at com.ExitTest.Tests.SearchTest.search(SearchTest.java:32)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- search -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.ExitTest.Tests.SearchTest@57b9e423]" started-at="2022-07-14T23:10:23 IST" name="endTest" finished-at="2022-07-14T23:10:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="resultTest(org.testng.ITestResult)[pri:0, instance:com.ExitTest.Tests.SearchTest@57b9e423]" started-at="2022-07-14T23:10:23 IST" name="resultTest" finished-at="2022-07-14T23:10:23 IST" duration-ms="71" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=search status=FAILURE method=SearchTest.search()[pri:1, instance:com.ExitTest.Tests.SearchTest@57b9e423] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resultTest -->
        <test-method is-config="true" signature="testclose()[pri:0, instance:com.ExitTest.Tests.SearchTest@57b9e423]" started-at="2022-07-14T23:10:23 IST" name="testclose" finished-at="2022-07-14T23:10:23 IST" duration-ms="77" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testclose -->
        <test-method is-config="true" signature="intializerDriver(java.lang.String)[pri:0, instance:com.ExitTest.Tests.SearchTest@57b9e423]" started-at="2022-07-14T23:10:23 IST" name="intializerDriver" finished-at="2022-07-14T23:10:24 IST" duration-ms="994" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializerDriver -->
        <test-method is-config="true" signature="openUrl()[pri:0, instance:com.ExitTest.Tests.SearchTest@57b9e423]" started-at="2022-07-14T23:10:24 IST" name="openUrl" finished-at="2022-07-14T23:10:31 IST" duration-ms="6699" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openUrl -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.ExitTest.Tests.SearchTest@57b9e423]" started-at="2022-07-14T23:10:31 IST" name="startTest" finished-at="2022-07-14T23:10:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ExitTest.Tests.SearchTest.invalidSearch()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="windowMaximize()[pri:0, instance:com.ExitTest.Tests.SearchTest@57b9e423]" started-at="2022-07-14T23:10:31 IST" name="windowMaximize" finished-at="2022-07-14T23:10:31 IST" duration-ms="115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- windowMaximize -->
        <test-method signature="invalidSearch()[pri:2, instance:com.ExitTest.Tests.SearchTest@57b9e423]" started-at="2022-07-14T23:10:31 IST" name="invalidSearch" finished-at="2022-07-14T23:10:33 IST" duration-ms="2051" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidSearch -->
        <test-method is-config="true" signature="resultTest(org.testng.ITestResult)[pri:0, instance:com.ExitTest.Tests.SearchTest@57b9e423]" started-at="2022-07-14T23:10:33 IST" name="resultTest" finished-at="2022-07-14T23:10:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidSearch status=SUCCESS method=SearchTest.invalidSearch()[pri:2, instance:com.ExitTest.Tests.SearchTest@57b9e423] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resultTest -->
        <test-method is-config="true" signature="testclose()[pri:0, instance:com.ExitTest.Tests.SearchTest@57b9e423]" started-at="2022-07-14T23:10:33 IST" name="testclose" finished-at="2022-07-14T23:10:33 IST" duration-ms="90" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testclose -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.ExitTest.Tests.SearchTest@57b9e423]" started-at="2022-07-14T23:10:33 IST" name="endTest" finished-at="2022-07-14T23:10:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- com.ExitTest.Tests.SearchTest -->
      <class name="com.ExitTest.Tests.ElectronicsItemTest">
        <test-method is-config="true" signature="intializerDriver(java.lang.String)[pri:0, instance:com.ExitTest.Tests.ElectronicsItemTest@40ab8a8]" started-at="2022-07-14T23:09:50 IST" name="intializerDriver" finished-at="2022-07-14T23:09:51 IST" duration-ms="1011" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializerDriver -->
        <test-method is-config="true" signature="openUrl()[pri:0, instance:com.ExitTest.Tests.ElectronicsItemTest@40ab8a8]" started-at="2022-07-14T23:09:51 IST" name="openUrl" finished-at="2022-07-14T23:09:55 IST" duration-ms="4124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openUrl -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.ExitTest.Tests.ElectronicsItemTest@40ab8a8]" started-at="2022-07-14T23:09:55 IST" name="startTest" finished-at="2022-07-14T23:09:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ExitTest.Tests.ElectronicsItemTest.ElectronicsItem()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="windowMaximize()[pri:0, instance:com.ExitTest.Tests.ElectronicsItemTest@40ab8a8]" started-at="2022-07-14T23:09:55 IST" name="windowMaximize" finished-at="2022-07-14T23:09:55 IST" duration-ms="128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- windowMaximize -->
        <test-method signature="ElectronicsItem()[pri:0, instance:com.ExitTest.Tests.ElectronicsItemTest@40ab8a8]" started-at="2022-07-14T23:09:55 IST" name="ElectronicsItem" finished-at="2022-07-14T23:09:57 IST" duration-ms="2376" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ElectronicsItem -->
        <test-method is-config="true" signature="testclose()[pri:0, instance:com.ExitTest.Tests.ElectronicsItemTest@40ab8a8]" started-at="2022-07-14T23:09:57 IST" name="testclose" finished-at="2022-07-14T23:09:58 IST" duration-ms="108" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testclose -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.ExitTest.Tests.ElectronicsItemTest@40ab8a8]" started-at="2022-07-14T23:09:57 IST" name="endTest" finished-at="2022-07-14T23:09:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="resultTest(org.testng.ITestResult)[pri:0, instance:com.ExitTest.Tests.ElectronicsItemTest@40ab8a8]" started-at="2022-07-14T23:09:57 IST" name="resultTest" finished-at="2022-07-14T23:09:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ElectronicsItem status=SUCCESS method=ElectronicsItemTest.ElectronicsItem()[pri:0, instance:com.ExitTest.Tests.ElectronicsItemTest@40ab8a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resultTest -->
      </class> <!-- com.ExitTest.Tests.ElectronicsItemTest -->
      <class name="com.ExitTest.Tests.RemoveItemFromCartTest">
        <test-method is-config="true" signature="intializerDriver(java.lang.String)[pri:0, instance:com.ExitTest.Tests.RemoveItemFromCartTest@5f14a673]" started-at="2022-07-14T23:07:58 IST" name="intializerDriver" finished-at="2022-07-14T23:07:59 IST" duration-ms="1017" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializerDriver -->
        <test-method is-config="true" signature="openUrl()[pri:0, instance:com.ExitTest.Tests.RemoveItemFromCartTest@5f14a673]" started-at="2022-07-14T23:07:59 IST" name="openUrl" finished-at="2022-07-14T23:08:04 IST" duration-ms="4761" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openUrl -->
        <test-method is-config="true" signature="windowMaximize()[pri:0, instance:com.ExitTest.Tests.RemoveItemFromCartTest@5f14a673]" started-at="2022-07-14T23:08:04 IST" name="windowMaximize" finished-at="2022-07-14T23:08:04 IST" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- windowMaximize -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.ExitTest.Tests.RemoveItemFromCartTest@5f14a673]" started-at="2022-07-14T23:08:04 IST" name="startTest" finished-at="2022-07-14T23:08:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ExitTest.Tests.RemoveItemFromCartTest.RemoveToCart()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="RemoveToCart()[pri:1, instance:com.ExitTest.Tests.RemoveItemFromCartTest@5f14a673]" started-at="2022-07-14T23:08:04 IST" name="RemoveToCart" finished-at="2022-07-14T23:08:07 IST" duration-ms="2610" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RemoveToCart -->
        <test-method is-config="true" signature="resultTest(org.testng.ITestResult)[pri:0, instance:com.ExitTest.Tests.RemoveItemFromCartTest@5f14a673]" started-at="2022-07-14T23:08:07 IST" name="resultTest" finished-at="2022-07-14T23:08:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RemoveToCart status=SUCCESS method=RemoveItemFromCartTest.RemoveToCart()[pri:1, instance:com.ExitTest.Tests.RemoveItemFromCartTest@5f14a673] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resultTest -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.ExitTest.Tests.RemoveItemFromCartTest@5f14a673]" started-at="2022-07-14T23:08:07 IST" name="endTest" finished-at="2022-07-14T23:08:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="testclose()[pri:0, instance:com.ExitTest.Tests.RemoveItemFromCartTest@5f14a673]" started-at="2022-07-14T23:08:07 IST" name="testclose" finished-at="2022-07-14T23:08:07 IST" duration-ms="93" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testclose -->
        <test-method is-config="true" signature="intializerDriver(java.lang.String)[pri:0, instance:com.ExitTest.Tests.RemoveItemFromCartTest@5f14a673]" started-at="2022-07-14T23:08:07 IST" name="intializerDriver" finished-at="2022-07-14T23:08:08 IST" duration-ms="1016" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializerDriver -->
        <test-method is-config="true" signature="openUrl()[pri:0, instance:com.ExitTest.Tests.RemoveItemFromCartTest@5f14a673]" started-at="2022-07-14T23:08:08 IST" name="openUrl" finished-at="2022-07-14T23:08:11 IST" duration-ms="3316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openUrl -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.ExitTest.Tests.RemoveItemFromCartTest@5f14a673]" started-at="2022-07-14T23:08:11 IST" name="startTest" finished-at="2022-07-14T23:08:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ExitTest.Tests.RemoveItemFromCartTest.ItemNotExist()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="windowMaximize()[pri:0, instance:com.ExitTest.Tests.RemoveItemFromCartTest@5f14a673]" started-at="2022-07-14T23:08:11 IST" name="windowMaximize" finished-at="2022-07-14T23:08:11 IST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- windowMaximize -->
        <test-method signature="ItemNotExist()[pri:2, instance:com.ExitTest.Tests.RemoveItemFromCartTest@5f14a673]" started-at="2022-07-14T23:08:11 IST" name="ItemNotExist" finished-at="2022-07-14T23:08:27 IST" duration-ms="15318" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="container"]/div/div[2]/div/div/div[1]/div[1]/div[6]/div/div[2]/div[2]/div[2]"}
  (Session info: headless chrome=103.0.5060.114)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'IN-3LSM2J3', ip: '192.168.43.114', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 103.0.5060.114, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\PREETI~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:58223}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 8eef18de8141e2102604503fd33f2dd5
*** Element info: {Using=xpath, value=//*[@id="container"]/div/div[2]/div/div/div[1]/div[1]/div[6]/div/div[2]/div[2]/div[2]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="container"]/div/div[2]/div/div/div[1]/div[1]/div[6]/div/div[2]/div[2]/div[2]"}
  (Session info: headless chrome=103.0.5060.114)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'IN-3LSM2J3', ip: '192.168.43.114', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 103.0.5060.114, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\PREETI~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:58223}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 8eef18de8141e2102604503fd33f2dd5
*** Element info: {Using=xpath, value=//*[@id="container"]/div/div[2]/div/div/div[1]/div[1]/div[6]/div/div[2]/div[2]/div[2]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy31.getWrappedElement(Unknown Source)
at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:50)
at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:484)
at com.ExitTest.Pages.RemoveItemFromCartPage.clickOnRemoveOption(RemoveItemFromCartPage.java:47)
at com.ExitTest.Tests.RemoveItemFromCartTest.ItemNotExist(RemoveItemFromCartTest.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ItemNotExist -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.ExitTest.Tests.RemoveItemFromCartTest@5f14a673]" started-at="2022-07-14T23:08:27 IST" name="endTest" finished-at="2022-07-14T23:08:27 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="resultTest(org.testng.ITestResult)[pri:0, instance:com.ExitTest.Tests.RemoveItemFromCartTest@5f14a673]" started-at="2022-07-14T23:08:27 IST" name="resultTest" finished-at="2022-07-14T23:08:27 IST" duration-ms="68" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ItemNotExist status=FAILURE method=RemoveItemFromCartTest.ItemNotExist()[pri:2, instance:com.ExitTest.Tests.RemoveItemFromCartTest@5f14a673] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resultTest -->
        <test-method is-config="true" signature="testclose()[pri:0, instance:com.ExitTest.Tests.RemoveItemFromCartTest@5f14a673]" started-at="2022-07-14T23:08:27 IST" name="testclose" finished-at="2022-07-14T23:08:27 IST" duration-ms="114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testclose -->
      </class> <!-- com.ExitTest.Tests.RemoveItemFromCartTest -->
      <class name="com.ExitTest.Tests.FlipKartFunctionButtonsTest">
        <test-method is-config="true" signature="intializerDriver(java.lang.String)[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:08:34 IST" name="intializerDriver" finished-at="2022-07-14T23:08:35 IST" duration-ms="1030" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializerDriver -->
        <test-method is-config="true" signature="openUrl()[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:08:35 IST" name="openUrl" finished-at="2022-07-14T23:08:41 IST" duration-ms="5675" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openUrl -->
        <test-method is-config="true" signature="windowMaximize()[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:08:41 IST" name="windowMaximize" finished-at="2022-07-14T23:08:41 IST" duration-ms="119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- windowMaximize -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:08:41 IST" name="startTest" finished-at="2022-07-14T23:08:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ExitTest.Tests.FlipKartFunctionButtonsTest.AboutUs() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="AboutUs()[pri:1, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:08:41 IST" name="AboutUs" finished-at="2022-07-14T23:08:48 IST" duration-ms="7138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AboutUs -->
        <test-method is-config="true" signature="testclose()[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:08:48 IST" name="testclose" finished-at="2022-07-14T23:08:48 IST" duration-ms="97" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testclose -->
        <test-method is-config="true" signature="resultTest(org.testng.ITestResult)[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:08:48 IST" name="resultTest" finished-at="2022-07-14T23:08:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AboutUs status=SUCCESS method=FlipKartFunctionButtonsTest.AboutUs()[pri:1, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resultTest -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:08:48 IST" name="endTest" finished-at="2022-07-14T23:08:48 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="intializerDriver(java.lang.String)[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:08:48 IST" name="intializerDriver" finished-at="2022-07-14T23:08:49 IST" duration-ms="1013" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializerDriver -->
        <test-method is-config="true" signature="openUrl()[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:08:49 IST" name="openUrl" finished-at="2022-07-14T23:08:55 IST" duration-ms="5953" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openUrl -->
        <test-method is-config="true" signature="windowMaximize()[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:08:55 IST" name="windowMaximize" finished-at="2022-07-14T23:08:55 IST" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- windowMaximize -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:08:55 IST" name="startTest" finished-at="2022-07-14T23:08:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ExitTest.Tests.FlipKartFunctionButtonsTest.ContactUs() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="ContactUs()[pri:2, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:08:55 IST" name="ContactUs" finished-at="2022-07-14T23:09:01 IST" duration-ms="6137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ContactUs -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:01 IST" name="endTest" finished-at="2022-07-14T23:09:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="testclose()[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:01 IST" name="testclose" finished-at="2022-07-14T23:09:01 IST" duration-ms="106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testclose -->
        <test-method is-config="true" signature="resultTest(org.testng.ITestResult)[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:01 IST" name="resultTest" finished-at="2022-07-14T23:09:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ContactUs status=SUCCESS method=FlipKartFunctionButtonsTest.ContactUs()[pri:2, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resultTest -->
        <test-method is-config="true" signature="intializerDriver(java.lang.String)[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:01 IST" name="intializerDriver" finished-at="2022-07-14T23:09:02 IST" duration-ms="1007" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializerDriver -->
        <test-method is-config="true" signature="openUrl()[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:02 IST" name="openUrl" finished-at="2022-07-14T23:09:10 IST" duration-ms="7172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openUrl -->
        <test-method is-config="true" signature="windowMaximize()[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:10 IST" name="windowMaximize" finished-at="2022-07-14T23:09:10 IST" duration-ms="127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- windowMaximize -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:10 IST" name="startTest" finished-at="2022-07-14T23:09:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ExitTest.Tests.FlipKartFunctionButtonsTest.CancellationAndRefund() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="CancellationAndRefund()[pri:3, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:10 IST" name="CancellationAndRefund" finished-at="2022-07-14T23:09:21 IST" duration-ms="11529" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CancellationAndRefund -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:21 IST" name="endTest" finished-at="2022-07-14T23:09:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="resultTest(org.testng.ITestResult)[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:21 IST" name="resultTest" finished-at="2022-07-14T23:09:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CancellationAndRefund status=SUCCESS method=FlipKartFunctionButtonsTest.CancellationAndRefund()[pri:3, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resultTest -->
        <test-method is-config="true" signature="testclose()[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:21 IST" name="testclose" finished-at="2022-07-14T23:09:21 IST" duration-ms="109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testclose -->
        <test-method is-config="true" signature="intializerDriver(java.lang.String)[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:21 IST" name="intializerDriver" finished-at="2022-07-14T23:09:22 IST" duration-ms="1027" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializerDriver -->
        <test-method is-config="true" signature="openUrl()[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:22 IST" name="openUrl" finished-at="2022-07-14T23:09:26 IST" duration-ms="3596" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openUrl -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:26 IST" name="startTest" finished-at="2022-07-14T23:09:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ExitTest.Tests.FlipKartFunctionButtonsTest.SocialMedia() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="windowMaximize()[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:26 IST" name="windowMaximize" finished-at="2022-07-14T23:09:26 IST" duration-ms="128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- windowMaximize -->
        <test-method signature="SocialMedia()[pri:4, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:26 IST" name="SocialMedia" finished-at="2022-07-14T23:09:31 IST" duration-ms="5332" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SocialMedia -->
        <test-method is-config="true" signature="resultTest(org.testng.ITestResult)[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:31 IST" name="resultTest" finished-at="2022-07-14T23:09:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SocialMedia status=SUCCESS method=FlipKartFunctionButtonsTest.SocialMedia()[pri:4, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resultTest -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:31 IST" name="endTest" finished-at="2022-07-14T23:09:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="testclose()[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:31 IST" name="testclose" finished-at="2022-07-14T23:09:31 IST" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testclose -->
        <test-method is-config="true" signature="intializerDriver(java.lang.String)[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:31 IST" name="intializerDriver" finished-at="2022-07-14T23:09:33 IST" duration-ms="1029" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializerDriver -->
        <test-method is-config="true" signature="openUrl()[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:33 IST" name="openUrl" finished-at="2022-07-14T23:09:36 IST" duration-ms="3533" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openUrl -->
        <test-method is-config="true" signature="windowMaximize()[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:36 IST" name="windowMaximize" finished-at="2022-07-14T23:09:36 IST" duration-ms="125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- windowMaximize -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:36 IST" name="startTest" finished-at="2022-07-14T23:09:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ExitTest.Tests.FlipKartFunctionButtonsTest.policy() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="policy()[pri:5, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:36 IST" name="policy" finished-at="2022-07-14T23:09:42 IST" duration-ms="5970" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- policy -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:42 IST" name="endTest" finished-at="2022-07-14T23:09:42 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="resultTest(org.testng.ITestResult)[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:42 IST" name="resultTest" finished-at="2022-07-14T23:09:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=policy status=SUCCESS method=FlipKartFunctionButtonsTest.policy()[pri:5, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resultTest -->
        <test-method is-config="true" signature="testclose()[pri:0, instance:com.ExitTest.Tests.FlipKartFunctionButtonsTest@76911385]" started-at="2022-07-14T23:09:42 IST" name="testclose" finished-at="2022-07-14T23:09:42 IST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testclose -->
      </class> <!-- com.ExitTest.Tests.FlipKartFunctionButtonsTest -->
      <class name="com.ExitTest.Tests.BeautyandToysTest">
        <test-method is-config="true" signature="intializerDriver(java.lang.String)[pri:0, instance:com.ExitTest.Tests.BeautyandToysTest@65cc8228]" started-at="2022-07-14T23:10:05 IST" name="intializerDriver" finished-at="2022-07-14T23:10:06 IST" duration-ms="1044" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializerDriver -->
        <test-method is-config="true" signature="openUrl()[pri:0, instance:com.ExitTest.Tests.BeautyandToysTest@65cc8228]" started-at="2022-07-14T23:10:06 IST" name="openUrl" finished-at="2022-07-14T23:10:09 IST" duration-ms="3799" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openUrl -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.ExitTest.Tests.BeautyandToysTest@65cc8228]" started-at="2022-07-14T23:10:09 IST" name="startTest" finished-at="2022-07-14T23:10:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ExitTest.Tests.BeautyandToysTest.BeautyandToys()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="windowMaximize()[pri:0, instance:com.ExitTest.Tests.BeautyandToysTest@65cc8228]" started-at="2022-07-14T23:10:09 IST" name="windowMaximize" finished-at="2022-07-14T23:10:10 IST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- windowMaximize -->
        <test-method signature="BeautyandToys()[pri:0, instance:com.ExitTest.Tests.BeautyandToysTest@65cc8228]" started-at="2022-07-14T23:10:10 IST" name="BeautyandToys" finished-at="2022-07-14T23:10:14 IST" duration-ms="4654" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeautyandToys -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.ExitTest.Tests.BeautyandToysTest@65cc8228]" started-at="2022-07-14T23:10:14 IST" name="endTest" finished-at="2022-07-14T23:10:14 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="resultTest(org.testng.ITestResult)[pri:0, instance:com.ExitTest.Tests.BeautyandToysTest@65cc8228]" started-at="2022-07-14T23:10:14 IST" name="resultTest" finished-at="2022-07-14T23:10:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BeautyandToys status=SUCCESS method=BeautyandToysTest.BeautyandToys()[pri:0, instance:com.ExitTest.Tests.BeautyandToysTest@65cc8228] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resultTest -->
        <test-method is-config="true" signature="testclose()[pri:0, instance:com.ExitTest.Tests.BeautyandToysTest@65cc8228]" started-at="2022-07-14T23:10:14 IST" name="testclose" finished-at="2022-07-14T23:10:14 IST" duration-ms="99" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testclose -->
      </class> <!-- com.ExitTest.Tests.BeautyandToysTest -->
      <class name="com.ExitTest.Tests.HomeFurnitureTest">
        <test-method is-config="true" signature="intializerDriver(java.lang.String)[pri:0, instance:com.ExitTest.Tests.HomeFurnitureTest@c4c0b41]" started-at="2022-07-14T23:08:27 IST" name="intializerDriver" finished-at="2022-07-14T23:08:28 IST" duration-ms="1006" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializerDriver -->
        <test-method is-config="true" signature="openUrl()[pri:0, instance:com.ExitTest.Tests.HomeFurnitureTest@c4c0b41]" started-at="2022-07-14T23:08:28 IST" name="openUrl" finished-at="2022-07-14T23:08:32 IST" duration-ms="4166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openUrl -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.ExitTest.Tests.HomeFurnitureTest@c4c0b41]" started-at="2022-07-14T23:08:32 IST" name="startTest" finished-at="2022-07-14T23:08:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ExitTest.Tests.HomeFurnitureTest.HomeFurniture()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="windowMaximize()[pri:0, instance:com.ExitTest.Tests.HomeFurnitureTest@c4c0b41]" started-at="2022-07-14T23:08:32 IST" name="windowMaximize" finished-at="2022-07-14T23:08:32 IST" duration-ms="127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- windowMaximize -->
        <test-method signature="HomeFurniture()[pri:0, instance:com.ExitTest.Tests.HomeFurnitureTest@c4c0b41]" started-at="2022-07-14T23:08:32 IST" name="HomeFurniture" finished-at="2022-07-14T23:08:34 IST" duration-ms="1569" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HomeFurniture -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.ExitTest.Tests.HomeFurnitureTest@c4c0b41]" started-at="2022-07-14T23:08:34 IST" name="endTest" finished-at="2022-07-14T23:08:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="resultTest(org.testng.ITestResult)[pri:0, instance:com.ExitTest.Tests.HomeFurnitureTest@c4c0b41]" started-at="2022-07-14T23:08:34 IST" name="resultTest" finished-at="2022-07-14T23:08:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=HomeFurniture status=SUCCESS method=HomeFurnitureTest.HomeFurniture()[pri:0, instance:com.ExitTest.Tests.HomeFurnitureTest@c4c0b41] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resultTest -->
        <test-method is-config="true" signature="testclose()[pri:0, instance:com.ExitTest.Tests.HomeFurnitureTest@c4c0b41]" started-at="2022-07-14T23:08:34 IST" name="testclose" finished-at="2022-07-14T23:08:34 IST" duration-ms="106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testclose -->
      </class> <!-- com.ExitTest.Tests.HomeFurnitureTest -->
      <class name="com.ExitTest.Tests.TopOffersTest">
        <test-method is-config="true" signature="intializerDriver(java.lang.String)[pri:0, instance:com.ExitTest.Tests.TopOffersTest@6ff37443]" started-at="2022-07-14T23:09:58 IST" name="intializerDriver" finished-at="2022-07-14T23:09:59 IST" duration-ms="1033" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializerDriver -->
        <test-method is-config="true" signature="openUrl()[pri:0, instance:com.ExitTest.Tests.TopOffersTest@6ff37443]" started-at="2022-07-14T23:09:59 IST" name="openUrl" finished-at="2022-07-14T23:10:02 IST" duration-ms="3655" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openUrl -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.ExitTest.Tests.TopOffersTest@6ff37443]" started-at="2022-07-14T23:10:02 IST" name="startTest" finished-at="2022-07-14T23:10:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ExitTest.Tests.TopOffersTest.TopOffers()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="windowMaximize()[pri:0, instance:com.ExitTest.Tests.TopOffersTest@6ff37443]" started-at="2022-07-14T23:10:02 IST" name="windowMaximize" finished-at="2022-07-14T23:10:02 IST" duration-ms="115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- windowMaximize -->
        <test-method signature="TopOffers()[pri:0, instance:com.ExitTest.Tests.TopOffersTest@6ff37443]" started-at="2022-07-14T23:10:02 IST" name="TopOffers" finished-at="2022-07-14T23:10:04 IST" duration-ms="2139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TopOffers -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.ExitTest.Tests.TopOffersTest@6ff37443]" started-at="2022-07-14T23:10:04 IST" name="endTest" finished-at="2022-07-14T23:10:04 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="testclose()[pri:0, instance:com.ExitTest.Tests.TopOffersTest@6ff37443]" started-at="2022-07-14T23:10:04 IST" name="testclose" finished-at="2022-07-14T23:10:05 IST" duration-ms="108" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testclose -->
        <test-method is-config="true" signature="resultTest(org.testng.ITestResult)[pri:0, instance:com.ExitTest.Tests.TopOffersTest@6ff37443]" started-at="2022-07-14T23:10:04 IST" name="resultTest" finished-at="2022-07-14T23:10:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TopOffers status=SUCCESS method=TopOffersTest.TopOffers()[pri:0, instance:com.ExitTest.Tests.TopOffersTest@6ff37443] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resultTest -->
      </class> <!-- com.ExitTest.Tests.TopOffersTest -->
      <class name="com.ExitTest.Tests.LoginTest">
        <test-method is-config="true" signature="setExtent()[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:24 IST" name="setExtent" finished-at="2022-07-14T23:07:24 IST" duration-ms="61" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtent -->
        <test-method is-config="true" signature="intializerDriver(java.lang.String)[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:24 IST" name="intializerDriver" finished-at="2022-07-14T23:07:26 IST" duration-ms="1397" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializerDriver -->
        <test-method is-config="true" signature="openUrl()[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:26 IST" name="openUrl" finished-at="2022-07-14T23:07:30 IST" duration-ms="3954" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openUrl -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:30 IST" name="startTest" finished-at="2022-07-14T23:07:30 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ExitTest.Tests.LoginTest.validLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="windowMaximize()[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:30 IST" name="windowMaximize" finished-at="2022-07-14T23:07:30 IST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- windowMaximize -->
        <test-method signature="validLogin()[pri:1, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:30 IST" name="validLogin" finished-at="2022-07-14T23:07:30 IST" duration-ms="215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLogin -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:30 IST" name="endTest" finished-at="2022-07-14T23:07:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="resultTest(org.testng.ITestResult)[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:30 IST" name="resultTest" finished-at="2022-07-14T23:07:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLogin status=SUCCESS method=LoginTest.validLogin()[pri:1, instance:com.ExitTest.Tests.LoginTest@273842a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resultTest -->
        <test-method is-config="true" signature="testclose()[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:30 IST" name="testclose" finished-at="2022-07-14T23:07:30 IST" duration-ms="124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testclose -->
        <test-method is-config="true" signature="intializerDriver(java.lang.String)[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:30 IST" name="intializerDriver" finished-at="2022-07-14T23:07:31 IST" duration-ms="1006" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializerDriver -->
        <test-method is-config="true" signature="openUrl()[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:31 IST" name="openUrl" finished-at="2022-07-14T23:07:35 IST" duration-ms="3743" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openUrl -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:35 IST" name="startTest" finished-at="2022-07-14T23:07:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ExitTest.Tests.LoginTest.invalidEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="windowMaximize()[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:35 IST" name="windowMaximize" finished-at="2022-07-14T23:07:35 IST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- windowMaximize -->
        <test-method signature="invalidEmail()[pri:2, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:35 IST" name="invalidEmail" finished-at="2022-07-14T23:07:35 IST" duration-ms="211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidEmail -->
        <test-method is-config="true" signature="resultTest(org.testng.ITestResult)[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:35 IST" name="resultTest" finished-at="2022-07-14T23:07:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidEmail status=SUCCESS method=LoginTest.invalidEmail()[pri:2, instance:com.ExitTest.Tests.LoginTest@273842a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resultTest -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:35 IST" name="endTest" finished-at="2022-07-14T23:07:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="testclose()[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:35 IST" name="testclose" finished-at="2022-07-14T23:07:35 IST" duration-ms="91" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testclose -->
        <test-method is-config="true" signature="intializerDriver(java.lang.String)[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:35 IST" name="intializerDriver" finished-at="2022-07-14T23:07:36 IST" duration-ms="1019" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializerDriver -->
        <test-method is-config="true" signature="openUrl()[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:36 IST" name="openUrl" finished-at="2022-07-14T23:07:48 IST" duration-ms="11735" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openUrl -->
        <test-method is-config="true" signature="windowMaximize()[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:48 IST" name="windowMaximize" finished-at="2022-07-14T23:07:48 IST" duration-ms="128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- windowMaximize -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:48 IST" name="startTest" finished-at="2022-07-14T23:07:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ExitTest.Tests.LoginTest.invalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="invalidPassword()[pri:3, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:48 IST" name="invalidPassword" finished-at="2022-07-14T23:07:48 IST" duration-ms="196" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidPassword -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:48 IST" name="endTest" finished-at="2022-07-14T23:07:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="resultTest(org.testng.ITestResult)[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:48 IST" name="resultTest" finished-at="2022-07-14T23:07:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidPassword status=SUCCESS method=LoginTest.invalidPassword()[pri:3, instance:com.ExitTest.Tests.LoginTest@273842a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resultTest -->
        <test-method is-config="true" signature="testclose()[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:48 IST" name="testclose" finished-at="2022-07-14T23:07:48 IST" duration-ms="102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testclose -->
        <test-method is-config="true" signature="intializerDriver(java.lang.String)[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:48 IST" name="intializerDriver" finished-at="2022-07-14T23:07:49 IST" duration-ms="1002" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializerDriver -->
        <test-method is-config="true" signature="openUrl()[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:49 IST" name="openUrl" finished-at="2022-07-14T23:07:53 IST" duration-ms="3695" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openUrl -->
        <test-method is-config="true" signature="windowMaximize()[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:53 IST" name="windowMaximize" finished-at="2022-07-14T23:07:53 IST" duration-ms="119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- windowMaximize -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:53 IST" name="startTest" finished-at="2022-07-14T23:07:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ExitTest.Tests.LoginTest.blankEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="blankEmail()[pri:4, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:53 IST" name="blankEmail" finished-at="2022-07-14T23:07:53 IST" duration-ms="195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- blankEmail -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:53 IST" name="endTest" finished-at="2022-07-14T23:07:53 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="resultTest(org.testng.ITestResult)[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:53 IST" name="resultTest" finished-at="2022-07-14T23:07:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=blankEmail status=SUCCESS method=LoginTest.blankEmail()[pri:4, instance:com.ExitTest.Tests.LoginTest@273842a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resultTest -->
        <test-method is-config="true" signature="testclose()[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:53 IST" name="testclose" finished-at="2022-07-14T23:07:54 IST" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testclose -->
        <test-method is-config="true" signature="intializerDriver(java.lang.String)[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:54 IST" name="intializerDriver" finished-at="2022-07-14T23:07:55 IST" duration-ms="1009" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializerDriver -->
        <test-method is-config="true" signature="openUrl()[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:55 IST" name="openUrl" finished-at="2022-07-14T23:07:58 IST" duration-ms="3429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openUrl -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:58 IST" name="startTest" finished-at="2022-07-14T23:07:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ExitTest.Tests.LoginTest.blankPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="windowMaximize()[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:58 IST" name="windowMaximize" finished-at="2022-07-14T23:07:58 IST" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- windowMaximize -->
        <test-method signature="blankPassword()[pri:5, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:58 IST" name="blankPassword" finished-at="2022-07-14T23:07:58 IST" duration-ms="184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- blankPassword -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:58 IST" name="endTest" finished-at="2022-07-14T23:07:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="resultTest(org.testng.ITestResult)[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:58 IST" name="resultTest" finished-at="2022-07-14T23:07:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=blankPassword status=SUCCESS method=LoginTest.blankPassword()[pri:5, instance:com.ExitTest.Tests.LoginTest@273842a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resultTest -->
        <test-method is-config="true" signature="testclose()[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:07:58 IST" name="testclose" finished-at="2022-07-14T23:07:58 IST" duration-ms="99" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testclose -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:com.ExitTest.Tests.LoginTest@273842a6]" started-at="2022-07-14T23:10:50 IST" name="endReport" finished-at="2022-07-14T23:10:50 IST" duration-ms="151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- com.ExitTest.Tests.LoginTest -->
      <class name="com.ExitTest.Tests.ApplyFilterTest">
        <test-method is-config="true" signature="intializerDriver(java.lang.String)[pri:0, instance:com.ExitTest.Tests.ApplyFilterTest@5467eea4]" started-at="2022-07-14T23:09:42 IST" name="intializerDriver" finished-at="2022-07-14T23:09:43 IST" duration-ms="1041" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializerDriver -->
        <test-method is-config="true" signature="openUrl()[pri:0, instance:com.ExitTest.Tests.ApplyFilterTest@5467eea4]" started-at="2022-07-14T23:09:43 IST" name="openUrl" finished-at="2022-07-14T23:09:47 IST" duration-ms="3406" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openUrl -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.ExitTest.Tests.ApplyFilterTest@5467eea4]" started-at="2022-07-14T23:09:47 IST" name="startTest" finished-at="2022-07-14T23:09:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ExitTest.Tests.ApplyFilterTest.ApplyFilter()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="windowMaximize()[pri:0, instance:com.ExitTest.Tests.ApplyFilterTest@5467eea4]" started-at="2022-07-14T23:09:47 IST" name="windowMaximize" finished-at="2022-07-14T23:09:47 IST" duration-ms="115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- windowMaximize -->
        <test-method signature="ApplyFilter()[pri:0, instance:com.ExitTest.Tests.ApplyFilterTest@5467eea4]" started-at="2022-07-14T23:09:47 IST" name="ApplyFilter" finished-at="2022-07-14T23:09:50 IST" duration-ms="2866" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ApplyFilter -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.ExitTest.Tests.ApplyFilterTest@5467eea4]" started-at="2022-07-14T23:09:50 IST" name="endTest" finished-at="2022-07-14T23:09:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="resultTest(org.testng.ITestResult)[pri:0, instance:com.ExitTest.Tests.ApplyFilterTest@5467eea4]" started-at="2022-07-14T23:09:50 IST" name="resultTest" finished-at="2022-07-14T23:09:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ApplyFilter status=SUCCESS method=ApplyFilterTest.ApplyFilter()[pri:0, instance:com.ExitTest.Tests.ApplyFilterTest@5467eea4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resultTest -->
        <test-method is-config="true" signature="testclose()[pri:0, instance:com.ExitTest.Tests.ApplyFilterTest@5467eea4]" started-at="2022-07-14T23:09:50 IST" name="testclose" finished-at="2022-07-14T23:09:50 IST" duration-ms="90" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testclose -->
      </class> <!-- com.ExitTest.Tests.ApplyFilterTest -->
      <class name="com.ExitTest.Tests.BecomeASellerTest">
        <test-method is-config="true" signature="intializerDriver(java.lang.String)[pri:0, instance:com.ExitTest.Tests.BecomeASellerTest@304a3655]" started-at="2022-07-14T23:10:33 IST" name="intializerDriver" finished-at="2022-07-14T23:10:34 IST" duration-ms="996" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializerDriver -->
        <test-method is-config="true" signature="openUrl()[pri:0, instance:com.ExitTest.Tests.BecomeASellerTest@304a3655]" started-at="2022-07-14T23:10:34 IST" name="openUrl" finished-at="2022-07-14T23:10:39 IST" duration-ms="4608" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openUrl -->
        <test-method is-config="true" signature="windowMaximize()[pri:0, instance:com.ExitTest.Tests.BecomeASellerTest@304a3655]" started-at="2022-07-14T23:10:39 IST" name="windowMaximize" finished-at="2022-07-14T23:10:39 IST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- windowMaximize -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.ExitTest.Tests.BecomeASellerTest@304a3655]" started-at="2022-07-14T23:10:39 IST" name="startTest" finished-at="2022-07-14T23:10:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ExitTest.Tests.BecomeASellerTest.BecomeASeller()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="BecomeASeller()[pri:0, instance:com.ExitTest.Tests.BecomeASellerTest@304a3655]" started-at="2022-07-14T23:10:39 IST" name="BecomeASeller" finished-at="2022-07-14T23:10:50 IST" duration-ms="11126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BecomeASeller -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.ExitTest.Tests.BecomeASellerTest@304a3655]" started-at="2022-07-14T23:10:50 IST" name="endTest" finished-at="2022-07-14T23:10:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="resultTest(org.testng.ITestResult)[pri:0, instance:com.ExitTest.Tests.BecomeASellerTest@304a3655]" started-at="2022-07-14T23:10:50 IST" name="resultTest" finished-at="2022-07-14T23:10:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BecomeASeller status=SUCCESS method=BecomeASellerTest.BecomeASeller()[pri:0, instance:com.ExitTest.Tests.BecomeASellerTest@304a3655] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resultTest -->
        <test-method is-config="true" signature="testclose()[pri:0, instance:com.ExitTest.Tests.BecomeASellerTest@304a3655]" started-at="2022-07-14T23:10:50 IST" name="testclose" finished-at="2022-07-14T23:10:50 IST" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testclose -->
      </class> <!-- com.ExitTest.Tests.BecomeASellerTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
